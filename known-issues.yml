---
# The issues here are deliberate deviations from the guidelines, as flagged by the qa tooling.
# For each issue documented, a reason for deviating from the guidelines is given.

ext-AdvanceDirective.Disorder:
  zib deviations:
    Extension.value[x]:
      - cardinality: 0..1
        reason: FHIR restricts Extension.value to a max cardinality of 0..1. To use it more than once, the extension is added 0..* in the hosting element.

ext-LanguageProficiency.CommunicationDetails:
  zib deviations:
    Extension.value[x]:
      - cardinality: 0..1
        reason: FHIR restricts Extension.value to a max cardinality of 0..1. To use it more than once, the extension should be added 0..* in the hosting element.

ext-Procedure.ProcedureMethod:
  zib deviations:
    Extension.value[x]:
      - cardinality: 1..1
        reason: The used extension uses a cardinality of 1..1 on the value[x] element. However, the extension itself is added with a cardinality of 0..1. 

pattern-NlCoreHealthProfessionalReference:
  ignored issues:
    StructureDefinition:
      - message: "sd-pg-08: 'The title of the StructureDefinition should conform to the profiling guidelines'"
        reason: The title is shown in the hosting profiles as the name of the datatype. "zib HealthProfessional Reference" is more descriptive than the title according to the profiling guidelines ("pattern NlCoreHealthProfessionalReference").

pattern-VitalSigns:
  ignored issues:
    Observation.category:VSCat:
      - message: "sd-pg-13: 'Slice names should be camelCased starting with a lowercase letter.'"
        reason: This slice name is adopted from the Vital Signs profile.
        
pattern-ZibHealthProfessionalReference:
  ignored issues:
    StructureDefinition:
      - message: "sd-pg-08: 'The title of the StructureDefinition should conform to the profiling guidelines'"
        reason: The title is shown in the hosting profiles as the name of the datatype. "zib HealthProfessional Reference" is more descriptive than the title according to the profiling guidelines ("pattern ZibHealthProfessionalReference").

zib-AddressInformation:
  zib deviations:
    Address.line.extension:houseNumberIndication.value[x]:
      - datatype: string
        reason: The mapping of zib AddressInformation on the FHIR Address datatype is the result of compatibility with HL7v3, which is the format that a lot of healthcare data in the Netherlands is stored in.  As a result of this, the zib HouseNumberIndication concept with CD datatype is mapped to a FHIR string datatype with a constraint added (the value can only be 'by' or 'to').
    Address.line.extension:*.value[x]:
      - cardinality: 1..1
        reason: The value of the extension is required, but the extension itself is optional, making the effective cardinality 0..1 as required by the zib.

zib-AdvanceDirective:
  zib deviations:
    Consent.provision.actor:representative.reference:
      - cardinality: 1..1
        reason: Consent.provision.actor has cardinality 0..1, making the cardinality of Consent.provision.actor:representative.reference effectively 0..1 as required by the zib.

zib-Alert:
  zib deviations:
    Flag.code:
      - cardinality: 1..1
        reason: The cardinality of FHIR is 1..1, where the zib (AlertName) is 0..1. Because of a constraint in the zib (a choice should be made between AlertName and Condition::Concern), the profile provides guidance on a code that should be used in case of absent data.

zib-AllergyIntolerance:
  zib deviations:
    AllergyIntolerance.reaction.manifestation:
      - cardinality: 1..*
        reason: The FHIR profiles are expected to implement zib cardinalities as conceptual cardinalities, but FHIR requires the manifestation element to be present. This aligns with the intention of the zib, as the Symptom concept is required for the container Reaction to make sense.

zib-BloodPressure:
  ignored issues:
    Observation.component:*BP:
      - message: "sd-pg-13: 'Slice names should be camelCased starting with a lowercase letter.'"
        reason: The slices "SystolicBP" and "DiastolicBP" start with an uppercase letter to align with the HL7 Vital Signs profile.

zib-BodyTemperature:
  ignored issues:
    Observation.code.coding:BodyTempCode:
      - message: "sd-pg-13: 'Slice names should be camelCased starting with a lowercase letter.'"
        reason: The slice name "BodyTempCode" is chosen to align with the Vital Signs profile for BodyTemperature.

zib-CareTeam:
  ignored issues:
    CareTeam.participant:*.member:
      - message: "sd-zpg-03: 'References to other resource profiles should be added next to the HL7  base references.'"
        reason: The restriction only applies to, and defines, this slice. The slicing is open so the base references can still be used.
  zib deviations:
    CareTeam.name:
      - short: CareTeamName
        reason: The zib concept name "CareTeamNaam" is an incorrect translation of the Dutch name into English.

zib-ContactInformation-TelephoneNumbers:
  zib deviations:
    ContactPoint.system:
      - cardinality: 1..1
        reason: Although TelecomType and NumberType are optional in the zib, ContactPoint.system is used to identify the TelephoneNumbers concept itself when this datatype is added to a profile. If only a telephone number is given without TelecomType and NumberType, this will fall in the default slice of the profile.

zib-ContactPerson:
  zib deviations:
    RelatedPerson.name*:
      - datatype: HumanName
        reason: A name in FHIR is represented using the HumanName datatype, not as a separate resource.
    RelatedPerson.name:
      - cardinality: 0..*
        reason: The name information according to zib NameInformation may be split up over multiple instances of RelatedPerson.name
    RelatedPerson.name:nameInformation:
      - cardinality: 0..2
        reason: The name information according to zib NameInformation may be split up over multiple instances of RelatedPerson.name  
    RelatedPerson.address:
      - datatype: Address
        reason: An address in FHIR is represented using the Address datatype, not as a separate resource.
    RelatedPerson.telecom:
      - datatype: ContactPoint
        reason: ContactInformation in FHIR is represented using the ContactPoint datatype, not as a separate resource.
      - cardinality: 0..*
        reason: The cardinality mismatch between the zib (0..1) and FHIR (0..*) is explained by the containers TelephoneNumbers (0..*) and EmailAddresses (0..*) inside the ContactInformation model. The FHIR datatype ContactPoint does not have these containers.
    RelatedPerson.telecom:telephoneNumbers:
      - datatype: ContactPoint
        reason: ContactInformation in FHIR is represented using the ContactPoint datatype, not as a separate resource.
    RelatedPerson.telecom:emailAddresses:
      - datatype: ContactPoint
        reason: ContactInformation in FHIR is represented using the ContactPoint datatype, not as a separate resource.

zib-Encounter:
  ignored issues:
    Encounter.reasonReference:*:
      - message: "sd-zpg-03: 'References to other resource profiles should be added next to the HL7  base references.'"
        reason: The restriction only applies to, and defines, this slice. The slicing is open so the base references can still be used.
  zib deviations:
    Encounter.class:
      - cardinality: 1..1
        reason: Encounter.class is manadatory by FHIR. The cardinality matches the cardinality of the zib, however, it does not match with the conceptual cardinality concept. This should not be a major problem.
    Encounter.participant:healthProfessional.individual:
      - cardinality: 0..1
        reason: The cardinality mismatch between the zib (0..*) and FHIR (0..1) is explained by the parent participant element that may exists 0..* times, thereby this mapping is still honoring the cardinality requirements of the zib.
    Encounter.reasonReference:*:
      - cardinality: 0..*
        reason: The cardinality mismatch between the zib (0..1) and FHIR (0..*) is explained by the missing ContactReason container in FHIR. This container may exists 0..* times, thereby this mapping is still honoring the cardinality requirements of the zib.
    Encounter.reasonReference:deviatingResult:    
      - datatype: Reference
        reason: The datatype mismatch between the zib (string) and FHIR (Reference) is explained by an error in the zib. DeviatingResult is captured with a reference to the zib-LaboratoryTestResult instead of a string value as the zib 2020 incorrectly states. This will be fixed in a future version of the zib (https://bits.nictiz.nl/browse/ZIB-1427).
    Encounter.reasonReference.extension:comment.value[x]:
      - cardinality: 0..*
        reason: The cardinality mismatch between the zib (0..1) and FHIR (0..*, effective) is explained by the missing ContactReason container in FHIR. This container may exists 0..* times, thereby this mapping is still honoring the cardinality requirements of the zib.
    Encounter.location.location:
      - cardinality: 0..*
        reason: The zib has a restricted cardinality of 0..1 for the Location concept (NL-CM:15.1.8). However, this cardianlity is propably too restricted (see <https://bits.nictiz.nl/browse/ZIB-1632> for discussion) and would prevent some practical use cases. Therefore, the cardinality has been left on 0..* in this profile.

zib-FunctionalOrMentalStatus:
  zib deviations:
    Observation.code:
      - cardinality: 1..1
        reason: The FHIR profiles are expected to implement zib cardinalities as conceptual cardinalities, but FHIR requires the Observation.code element to be present. This aligns with the intention of the zib, as the StatusName concept is required for zib FunctionalOrMentalStatus to make sense. 

zib-HealthcareProvider:
  zib deviations:
    Location.address:
      - datatype: Address
        reason: An address in FHIR is represented using the Address datatype, not as a separate resource.
      - cardinality: 0..1
        reason: The cardinality mismatch with the zib (0..1 versus 0..*) is explained by the restriction of FHIR to limit the Location.address to a physical address while the zib allows for other types of addresses (e.g. a postal address). Other types of addresses than a physical address are given in Organization.address which is referenced by Location.managingOrganization. More documentation can be found at https://github.com/Nictiz/Nictiz-R4-zib2020/issues/38
    Location.telecom:
      - cardinality: 0..*
        reason: The cardinality mismatch between the zib (0..1) and FHIR (0..*) is explained by the missing root element of zib part ContactInformation in FHIR. Instead, the two containers of the zib (TelephoneNumbers and EmailAddresses), which both have a cardinality of 0..*, are mapped directly into the resource. Thereby still honoring the cardinality requirements of the zib.
    Location.telecom*:
      - datatype: ContactPoint
        reason: ContactInformation in FHIR is represented using the ContactPoint datatype, not as a separate resource. Because the FHIR profile for ContactInformation consits of two parts the rootconcept of the ContactInformation is mapped on .telecom.

zib-HealthProfessional-Practitioner:
  zib deviations:
    Practitioner.name*:
      - datatype: HumanName
        reason: A name in FHIR is represented using the HumanName datatype, not as a separate resource.
    Practitioner.name:
      - cardinality: 0..*
        reason: The name information according to zib NameInformation may be split up over multiple instances of Practitioner.name
    Practitioner.name:nameInformation:
      - cardinality: 0..2
        reason: The name information according to zib NameInformation may be split up over multiple instances of Practitioner.name  
    Practitioner.telecom:
      - cardinality: 0..*
        reason: The cardinality mismatch between the zib (0..1) and FHIR (0..*) is explained by the missing root element of zib part ContactInformation in FHIR. Instead, the two containers of the zib (TelephoneNumbers and EmailAddresses), which both have a cardinality of 0..*, are mapped directly into the resource. Thereby still honoring the cardinality requirements of the zib.
    Practitioner.telecom*:
      - datatype: ContactPoint
        reason: ContactInformation in FHIR is represented using the ContactPoint datatype, not as a separate resource. Because the FHIR profile for ContactInformation consits of two parts the rootconcept of the ContactInformation is mapped on .telecom.
    Practitioner.address:
      - datatype: Address
        reason: An address in FHIR is represented using the Address datatype, not as a separate resource.

zib-HealthProfessional-PractitionerRole:
  zib deviations:
    PractitionerRole.telecom:
      - cardinality: 0..*
        reason: The cardinality mismatch between the zib (0..1) and FHIR (0..*) is explained by the missing root element of zib part ContactInformation in FHIR. Instead, the two containers of the zib (TelephoneNumbers and EmailAddresses), which both have a cardinality of 0..*, are mapped directly into the resource. Thereby still honoring the cardinality requirements of the zib.
    PractitionerRole.telecom*:
      - datatype: ContactPoint
        reason: ContactInformation in FHIR is represented using the ContactPoint datatype, not as a separate resource. Because the FHIR profile for ContactInformation consits of two parts the rootconcept of the ContactInformation is mapped on .telecom.

zib-HearingFunction.HearingAid:
  ignored issues:
    DeviceUseStatement.reasonReference:*:
      - message: "sd-zpg-03: 'References to other resource profiles should be added next to the HL7  base references.'"
        reason: The restriction only applies to, and defines, this slice. The slicing is open so the base references can still be used.
  zib deviations:
    DeviceUseStatement:
      - datatype: undefined
        reason: In FHIR, the reference to the MedicalDevice points in the other direction (so the MedicalDevice refers to HearingFunction). The MedicalDevice reference is however mapped on the root element that represents this zib rather than on DeviceUseStatement.reasonReference resulting in an unmatched datatype.
    DeviceUseStatement.bodySite:
      - datatype: CodeableConcept
        reason: The referenced zib AnatomicalLocation is profiled on a datatype level and not a resource. Therefore it cannot be referenced, rather its concepts and constraints are added inline. This element conforms to the zib AnatomicalLocation.
    DeviceUseStatement.timing[x]:timingPeriod.end:
      - short: EndDate
        reason: Incorrect short in zib definition. This is reported in ticket ZIB-1534.

zib-HearingFunction.HearingAid.Product:
  ignored issues:
    Device.type:
      - message: "sd-pg-04: 'If mapping.map exists and the mapping is not implicit, alias should exist.'"
        reason: The alias for ProductType is already present in the base profile where this profile is derived from. It should not be added twice to silence this issue.
  zib deviations:
    Device.identifier:*ProductID:
      - datatype: Identifier
        reason: The mapping of ProductID is not straightforward and relates to multiple elements in FHIR. In result, the mapping of the concept to FHIR will not match on a datatype level.
    Device.udiCarrier:*UdiCarrier.carrierHRF:
      - datatype: string
        reason: The mapping of ProductID is not straightforward and relates to multiple elements in FHIR. In result, the mapping of the concept to FHIR will not match on a datatype level.

zib-MedicalDevice:
  ignored issues:
    DeviceUseStatement.derivedFrom:*:
      - message: "sd-zpg-03: 'References to other resource profiles should be added next to the HL7  base references.'"
        reason: The restriction only applies to, and defines, this slice. The slicing is open so the base references can still be used.
    DeviceUseStatement.reasonReference:*:
      - message: "sd-zpg-03: 'References to other resource profiles should be added next to the HL7  base references.'"
        reason: The restriction only applies to, and defines, this slice. The slicing is open so the base references can still be used.
  zib deviations:
    DeviceUseStatement.derivedFrom:zibMedicalDeviceReference:
      - short: zib MedicalDevice reference
        reason: This is a special slice that represents situations where zib MedicalDevice is referenced from another zib through the derivedFrom element. Because this reference is reversed in FHIR, this profile needs to contain the mappings for the references in _all_ these zibs. A common slice is defined with an indicative name rather than the name of all the targets. 
    DeviceUseStatement.bodySite:
      - datatype: CodeableConcept
        reason: The referenced zib AnatomicalLocation is profiled on a datatype level and not a resource. Therefore it cannot be referenced, rather its concepts and constraints are added inline. This element conforms to the zib AnatomicalLocation.
    DeviceUseStatement.reasonReference:zibMedicalDeviceReference:
      - short: zib MedicalDevice reference
        reason: This is a special slice that represents situations where zib MedicalDevice is referenced from another zib through the reasonReference element. Because this reference is reversed in FHIR, this profile needs to contain the mappings for the references in _all_ these zibs. A common slice is defined with an indicative name rather than the name of all the targets. 
    DeviceUseStatement.timing[x]:timingPeriod.end:
      - short: EndDate
        reason: Incorrect short in zib definition. This is reported in ticket ZIB-1534.

zib-MedicalDevice.Product:
  zib deviations:
    Device.identifier:*ProductID:
      - datatype: Identifier
        reason: The mapping of ProductID is not straightforward and relates to multiple elements in FHIR. In result, the mapping of the concept to FHIR will not match on a datatype level.
    Device.udiCarrier:*UdiCarrier.carrierHRF:
      - datatype: string
        reason: The mapping of ProductID is not straightforward and relates to multiple elements in FHIR. In result, the mapping of the concept to FHIR will not match on a datatype level.

zib-NameInformation:
  zib deviations:
    HumanName.prefix:
      - cardinality: 0..*
        reason: prefix and suffix are mapped to the "titles" concept from the zib. There's a mismatch however in the way this information is represented in the zib and in FHIR. The mapping is documented in the profile.
    HumanName.suffix:
      - cardinality: 0..*
        reason: prefix and suffix are mapped to the "titles" concept from the zib. There's a mismatch however in the way this information is represented in the zib and in FHIR. The mapping is documented in the profile.
    HumanName.given:
      - short: FirstName / Initial
        reason: The zib defines both the complete list of first names and of initals as a single string. In FHIR this is done fundamentally different, by using separate names. Hence, the short has been changed to the singular form.
      - alias: first name,middle name,Voornaam,Initiaal
        reason: The first two initials are provided by FHIR. For the singular form of the latter two, see the remark above.
      - cardinality: 0..*
        reason: See the remark above
    HumanName.family.extension:*.value[x]:
      - cardinality: 1..1
        reason: The value of the extension is required, but the extension itself is optional, making the effective cardinality 0..1 as required by the zib.

zib-NameInformation.GivenName:
  zib deviations:
    HumanName.given:
      - cardinality: 1..*
        reason: The GivenName is optional according to the zib, but when this datatype profile is used, a name should be provided.

zib-NursingIntervention:
  zib deviations:
    CarePlan.activity.detail.scheduled[x]:scheduledTiming.repeat.frequency:
      - datatype: positiveInt
        reason: zib concepts Interval and Frequency are represented by a combination of .frequency, .period and .periodUnit, not by a single element of Quantity datatype.
    CarePlan.activity.detail.scheduled[x]:scheduledTiming.repeat.period:
      - datatype: decimal
        reason: zib concepts Interval and Frequency are represented by a combination of .frequency, .period and .periodUnit, not by a single element of Quantity datatype.
    CarePlan.activity.detail.scheduled[x]:scheduledTiming.repeat.periodUnit:
      - datatype: code
        reason: zib concepts Interval and Frequency are represented by a combination of .frequency, .period and .periodUnit, not by a single element of Quantity datatype.
    CarePlan.activity.detail.extension:medicalDevice.value[x]:
      - cardinality: 0..1
        reason: The value of the extension can only occur once, but the use of the extension itself is unlimited, making the effective cardinality 0..* as required by the zib.
  ignored issues:
    CarePlan.contributor:requester:
      - message: "sd-zpg-03: 'References to other resource profiles should be added next to the HL7  base references.'"
        reason: The slice is constrained on the target profile because this is what defines the slice. The HL7 base references are still available in the default slice.
    CarePlan.activity.detail.performer:*:
      - message: "sd-zpg-03: 'References to other resource profiles should be added next to the HL7  base references.'"
        reason: The slice is constrained on the target profile because this is what defines the slice. The HL7 base references are still available in the default slice. 

zib-Patient:
  zib deviations:
    Patient.name*:
      - datatype: HumanName
        reason: A name in FHIR is represented using the HumanName datatype, not as a separate resource.
    Patient.name:
      - cardinality: 0..*
        reason: The name information according to zib NameInformation may be split up over multiple instances of Patient.name
    Patient.name:nameInformation:
      - cardinality: 0..2
        reason: The name information according to zib NameInformation may be split up over multiple instances of Patient.name  
    Patient.telecom*:
      - datatype: ContactPoint
        reason: ContactInformation in FHIR is represented using the ContactPoint datatype, not as a separate resource.
    Patient.telecom:
      - cardinality: 0..*
        reason: The cardinality mismatch between the zib (0..1) and FHIR (0..*) is explained by the containers TelephoneNumbers (0..*) and EmailAddresses (0..*) inside the ContactInformation model. The FHIR datatype ContactPoint does not have these containers.
    Patient.address:
      - datatype: Address
        reason: An address in FHIR is represented using the Address datatype, not as a separate resource.
    Patient.deceased[x]:deceasedDateTime:
      - short: DateOfDeath
        reason: This element is mapped to two zib concepts, DateOfDeath and DeathIndicator. However, the latter is implicit -- although the zib recognizes both concepts, FHIR supports populating just one of them, thus DeathIndicator is assumed to be true when DateOfDeath is populated. For clarity reasons, the metadata of deceasedDateTime is only mapped to DateOfDeath.
      - datatype: dateTime
        reason: The boolean expected by DeathIndicator is only assumed; see the explanation above.
    Patient.contact:
      - datatype: BackboneElement
        reason: The zib ContactPerson _may_ be represented as Patient.contact. There is a different use case as well, where the ContactPerson is implemented using a RelatedPerson resource.
      - cardinality: 0..*
        reason: A patient may have multiple contacts. The expected cardinality of 0..1 stems from the root concept of zib ContactPerson, but this cardinality is essentially without meaning.
    Patient.contact.extension:contactPerson.value[x]:
      - datatype: Reference
        reason: This is an additional reference to a separate zib-ContactPerson (RelatedPerson) instance, next to the information in Pateint.contact. Patient.contact and RelatedPerson can both be used to capture the information from zib-ContactPerson, but each are used within a different context. Information may therefore be duplicated; this is the recommended way.
    Patient.contact.name:
      - datatype: HumanName
        reason: A name in FHIR is represented using the HumanName datatype, not as a separate resource.
    Patient.contact.telecom*:
      - datatype: ContactPoint
        reason: ContactInformation in FHIR is represented using the ContactPoint datatype, not as a separate resource.
    Patient.contact.telecom:
      - cardinality: 0..*
        reason: The cardinality mismatch between the zib (0..1) and FHIR (0..*) is explained by the containers TelephoneNumbers (0..*) and EmailAddresses (0..*) inside the ContactInformation model. The FHIR datatype ContactPoint does not have these containers.
    Patient.contact.address:
      - datatype: Address
        reason: An address in FHIR is represented using the Address datatype, not as a separate resource.
      - cardinality: 0..1
        reason: Patient.contact is a restricted representation of contact persons containing only information needed to contact a contact person. The full address information should be captured using an instance of the zib-ContactPerson profile on RelatedPerson, which can be linked using an extension. This is explained in the profile.  
    Patient.communication:
      - datatype: BackboneElement
        reason: The appropriate representation of zib LanguageProficiency in FHIR is Patient.communication, not a separate resource.
      - cardinality: 0..*
        reason: A patient may be proficient in multiple languages. The expected cardinality of 0..1 stems from the root concept of zib LanguageProficiency, but this cardinality is essentially without meaning.
    Patient.communication.language:
      - cardinality: 1..1
        reason: The FHIR profiles are expected to implement zib cardinalities as conceptual cardinalities, but FHIR requires the language element to be present. This aligns with the intention of the zib, as the Language concept is required for zib LanguageProficiency to make sense.
    Patient.communication.extension:languageControl:
      - datatype: Extension
        reason: The mapping is placed on the extension and not on the value[x] because of the nature of this extension. The extension itself contains a valueCoding that gets the zibs value. This datatype matches the zib CD type.
      - cardinality: 0..*
        reason: Because of the nature of this extension the cardinality has a mismatch. Three zib concepts are mapped to this extension. Therefore the extension cannot be 0..1, but should be able to repeat.

zib-Problem:
  zib deviations:
    Condition.bodySite:
      - datatype: CodeableConcept
        reason: The referenced zib AnatomicalLocation is profiled on a datatype level and not a resource. Therefore it cannot be referenced, rather its concepts and constraints are added inline. This element conforms to the zib AnatomicalLocation.

zib-Procedure-event:
  ignored issues:
    Procedure.report:textResult:
      - message: "sd-zpg-03: 'References to other resource profiles should be added next to the HL7  base references.'"
        reason: The restriction only applies to, and defines, this slice. The slicing is open so the base references can still be used.
        
  zib deviations:
    Procedure.bodySite:
      - datatype: CodeableConcept
        reason: The referenced zib AnatomicalLocation is profiled on a datatype level and not a resource. Therefore it cannot be referenced, rather its concepts and constraints are added inline. This element conforms to the zib AnatomicalLocation.

zib-Procedure-request:
  zib deviations:
    ServiceRequest.bodySite:
      - datatype: CodeableConcept
        reason: The referenced zib AnatomicalLocation is profiled on a datatype level and not a resource. Therefore it cannot be referenced, rather its concepts and constraints are added inline. This element conforms to the zib AnatomicalLocation.
    ServiceRequest.requester:
      - cardinality: 0..1
        reason: It seems that the zib may have an error in the cardinality for this concept and the cardinality should acctually be 0..1 rather than 0..*. This issue is being tracked here https://bits.nictiz.nl/browse/ZIB-1488

zib-TextResult:
  zib deviations:
    DiagnosticReport.status:
      - cardinality: 1..1
        reason: TextResultStatus (0..1) is mapped to mandatory status element which should not be a problem because implementers shall have to support status one way or another. When TextResultStatus is absent, other codes may be used than from the zib. The _unknown_ code can be used as a fallback.
    DiagnosticReport.code:
      - cardinality: 1..1
        reason: The cardinality of both zib and FHIR is 1..1, but because of conceptual cardinality 0..1 is expected. In case of absent data, the profiling guidelines provide guidance.
        
zib-TextResult.VisualResult:
  zib deviations:
    Media.content:
      - cardinality: 1..1
        reason: The use of the Media resource referenced in zib-TextResult DiagnosticReport.media.link is optional (0..*), but if the Media resource is used, Media.content should be present (1..1).

zib-Vaccination-event:
  zib deviations:
    Immunization.vaccineCode:
      - cardinality: 1..1
        reason: This is a known difference between the zib (0..*) and FHIR (1..1). The mandatory element by FHIR seems legit. If an immunization event has taken place the vaccine code should be known. Otherwise, the value of the whole Immunization resource will be strongly diminished.

zib-Vaccination-request:
  zib deviations:
    ImmunizationRecommendation.recommendation.dateCriterion.value:
      - cardinality: 1..1
        reason: ImmunizationRecommendation.recommendation.dateCriterion has cardinality 0..1, making the cardinality of ImmunizationRecommendation.recommendation.dateCriterion.value effectively 0..1 as required by the zib.

zib-VisualFunction.VisualAid:
  ignored issues:
    DeviceUseStatement.reasonReference:*:
      - message: "sd-zpg-03: 'References to other resource profiles should be added next to the HL7  base references.'"
        reason: The restriction only applies to, and defines, this slice. The slicing is open so the base references can still be used.
  zib deviations:
    DeviceUseStatement:
      - datatype: undefined
        reason: In FHIR, the reference to the MedicalDevice points in the other direction (so the MedicalDevice refers to VisualFunction). The MedicalDevice reference is however mapped on the root element that represents this zib rather than on DeviceUseStatement.reasonReference resulting in an unmatched datatype.
    DeviceUseStatement.bodySite:
      - datatype: CodeableConcept
        reason: The referenced zib AnatomicalLocation is profiled on a datatype level and not a resource. Therefore it cannot be referenced, rather its concepts and constraints are added inline. This element conforms to the zib AnatomicalLocation.
    DeviceUseStatement.timing[x]:timingPeriod.end:
      - short: EndDate
        reason: Incorrect short in zib definition. This is reported in ticket ZIB-1534.

zib-VisualFunction.VisualAid.Product:
  ignored issues:
    Device.type:
      - message: "sd-pg-04: 'If mapping.map exists and the mapping is not implicit, alias should exist.'"
        reason: The alias for ProductType is already present in the base profile where this profile is derived from. It should not be added twice to silence this issue.
  zib deviations:
    Device.identifier:*ProductID:
      - datatype: Identifier
        reason: The mapping of ProductID is not straightforward and relates to multiple elements in FHIR. In result, the mapping of the concept to FHIR will not match on a datatype level.
    Device.udiCarrier:*UdiCarrier.carrierHRF:
      - datatype: string
        reason: The mapping of ProductID is not straightforward and relates to multiple elements in FHIR. In result, the mapping of the concept to FHIR will not match on a datatype level.

unmapped zib concepts:
  - NL-CM:17.2.10: HealthcareProvider.LocationNumber
    reason: This zib concept is problematic to map cleanly to FHIR and it has been deemed too uncommon in practice to warrant an extension.

---
# The following issues are not "real" deviations stemming from design choices, but rather problems that pop up due to
# shortcomings in tooling, the used terminology server, etc.
# These might occur in one or more profiles, or in none if they have been fixed in the meantime. 

issues should occur: false

"*-AdvanceDirective*":
  ignored issues:
    Consent.scope*:
      - message: Unknown Code http://terminology.hl7.org/CodeSystem/consentscope#adr in http://terminology.hl7.org/CodeSystem/consentscope for 'http://terminology.hl7.org/CodeSystem/consentscope#adr'
        reason: This concerns an error in the FHIR terminology server. The adr code has been removed for R5 and the terminology server was updated for it too soon. They will fix it according to this zulip chat "https://chat.fhir.org/#narrow/stream/179166-implementers/topic/Consent.2Escope.3A.20diff.20in.20codes.20shown.20on.20FHIR.20vs.20Tx.20server"
      - message: None of the codings provided are in the value set 'Consent Scope Codes' (http://hl7.org/fhir/ValueSet/consent-scope), and a coding should come from this value set unless it has no suitable code
        reason: see above

nl-core-*:
  ignored issues:
    "*.address*.country.extension[0].value*":
      - message: None of the codings provided are in the value set 'LandCodelijsten' (http://decor.nictiz.nl/fhir/ValueSet/2.16.840.1.113883.2.4.3.11.60.121.11.10--20200901000000), and a coding from this value set is required) (codes = urn:oid:2.16.840.1.113883.2.4.4.16.34#6030)
        reason: The current version of the Validator seems to raise in incorrect error here. This is logged as a bug.  
        
nl-core-CareTeam-01:
  ignored issues:
    CareTeam.participant[*]:
      - message: Slicing cannot be evaluated
        reason: To check slicing in instances, the referenced resources need to be inspected, but this is not supported by the HL7 Validator.

nl-core-Encounter-01:
  ignored issues:
    Encounter.participant[*]:
      - message: Slicing cannot be evaluated
        reason: To check slicing in instances, the referenced resources need to be inspected, but this is not supported by the HL7 Validator.

nl-core-HearingFunction.HearingAid-*:
  ignored issues:
    DeviceUseStatement.reasonReference[*]:
      - message: Slicing cannot be evaluated
        reason: To check slicing in instances, the referenced resources need to be inspected, but this is not supported by the HL7 Validator.

nl-core-MedicalDevice-*:
  ignored issues:
    DeviceUseStatement.reasonReference[*]:
      - message: Slicing cannot be evaluated
        reason: To check slicing in instances, the referenced resources need to be inspected, but this is not supported by the HL7 Validator.

nl-core-*-DeviceUseStatement-*:
  ignored issues:
    DeviceUseStatement.reasonReference[*]:
      - message: Slicing cannot be evaluated
        reason: To check slicing in instances, the referenced resources need to be inspected, but this is not supported by the HL7 Validator.

nl-core-Mobility-*:
  ignored issues:
    DeviceUseStatement.reasonReference[*]:
      - message: Slicing cannot be evaluated
        reason: To check slicing in instances, the referenced resources need to be inspected, but this is not supported by the HL7 Validator.

nl-core-VisualFunction.VisualAid-*:
  ignored issues:
    DeviceUseStatement.reasonReference[*]:
      - message: Slicing cannot be evaluated
        reason: To check slicing in instances, the referenced resources need to be inspected, but this is not supported by the HL7 Validator.

zib-*Function.*Aid:
  zib deviations:
    DeviceUseStatement.reasonReference:zibMedicalDeviceReference:
      - short: zib MedicalDevice reference
        reason: The profiles zib-HearingFunction.HearingAid and zib-VisualFunction.VisualAid are derived from zib-MedicalDevice, where this slice is defined, but this slice is disabled in these derived profiles. However, the mapping still ends up in the snapshot, resulting in a warning here.
        
zib-Alert:
  ignored issues:
    Flag:
      - message: "sd-pg-04: 'If mapping.map exists and the mapping is not implicit, alias should exist.'"
        reason: The alias "Alert" is already defined in the base profile, so it doesn't need to be defined again in the differential.

zib-Patient:
  ignored issues:
    Patient.address:
      - message: "sd-pg-04: 'If mapping.map exists and the mapping is not implicit, alias should exist.'"
        reason: The alias is defined on the datatype profile and not repeated in the differential.
    Patient.contact.name:
      - message: "sd-pg-04: 'If mapping.map exists and the mapping is not implicit, alias should exist.'"
        reason: The alias is defined on the datatype profile and not repeated in the differential.
    Patient.contact.address:
      - message: "sd-pg-04: 'If mapping.map exists and the mapping is not implicit, alias should exist.'"
        reason: The alias is defined on the datatype profile and not repeated in the differential.
